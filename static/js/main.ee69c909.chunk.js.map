{"version":3,"sources":["Navbar.js","JumboIntro.js","DataRenderer.js","Home.js","Pricing.js","index.js"],"names":["SundaraNavbar","Navbar","bg","variant","Brand","href","Nav","className","Link","Component","SundaraJumboIntro","Jumbotron","style","backgroundImage","height","backgroundSize","borderRadius","Container","color","DataRenderer","props","createGroup","city","a","setState","Times","DayRank","Header","CityString","NextGoodDay","group","header","API_HOST","todayDate","Date","toLocaleDateString","cityString","fetch","then","response1","json","resp","citycode","id","state","country","response","push","i","goodTimes","length","key","rank","dayRanking","role","aria-label","tempResp","tomorrow","tommdate","setDate","getDate","humanDate","toDateString","nextGoodDayElem","catch","doTheThing","d","loading","onFieldChange","meme","clearTimeout","typingTimeout","setTimeout","bind","InputGroup","Prepend","Text","FormControl","onChange","event","console","log","target","value","this","aria-describedby","ToggleButtonGroup","type","name","ToggleButton","onClick","Spinner","animation","Table","striped","bordered","hover","Home","Pricing","ReactDOM","render","StrictMode","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.ee69c909.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Nav } from 'react-bootstrap';\n\nexport default class SundaraNavbar extends Component {\n    render() {\n      return (\n        <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">\n          Sundara\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n        </Nav>\n      </Navbar>\n      );\n    }\n}","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Jumbotron, Container } from 'react-bootstrap';\n\nexport default class SundaraJumboIntro extends Component {\n    render() {\n      var styles ={\n        backgroundImage: \"url(https://images.unsplash.com/photo-1523308413200-8ab4ef0f1e0d)\",\n        height: \"40vh\",\n        backgroundSize: \"cover\",\n        borderRadius: 0\n      }\n      var whiteText = {\n        color: \"#ffffff\"\n      }\n      return (\n        <Jumbotron style={styles}>\n          <Container style={whiteText}>\n          <h1>Determine your future</h1>\n          <p>\n            Use the power of astrology and numerology to determine the best times to start a new task. <br />\n            Get started today for a brighter future!\n          </p>\n          </Container>\n        </Jumbotron>\n      );\n    }\n}","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Table, InputGroup, FormControl, Spinner, ToggleButton, ToggleButtonGroup } from 'react-bootstrap';\n\nexport class DataRenderer extends Component {\n  constructor(props) {\n    super(props)\n    this.state ={loading: false, city: \"\"}\n    this.typingTimeout = null;\n    this.onFieldChange = this.onFieldChange.bind(this);\n  }\n  createGroup = async (city) => {\n    this.setState({Times: [], DayRank: [], Header: [], CityString: [], NextGoodDay: []})\n    let group = []\n    let header = []\n    const API_HOST= \"sundara-api.devksingh.com\"\n    const todayDate = new Date().toLocaleDateString('en-GB')\n    let cityString = ``\n    await fetch(`https://${API_HOST}/api/getCityCode?city=${city}`)\n      .then(async (response1) => {\n          response1 = response1.json();\n          return response1\n      }).then(async (resp) => {\n          const citycode = resp.id\n          cityString = `${resp.city}, ${resp.state} (${resp.country})`\n          await fetch(`https://${API_HOST}/api/getTimes?citycode=${citycode}&date=${todayDate}`)\n          .then(async (response) => {\n            response = await response.json();\n              header.push(<thead><tr><th>Good Time Start</th><th>Good Time End</th></tr></thead>)\n            for (let i = 0; i < response.goodTimes.length; i++) {\n              if (response.goodTimes[i][0] === response.goodTimes[i][1]){\n                continue\n              }\n              group.push(\n                <tr key={i}><td>{response.goodTimes[i][0]}</td><td>{response.goodTimes[i][1]}</td></tr>\n              )\n            }\n            let rank = \"\";\n            if (response.dayRanking === \"Good\") {\n              rank = <h2 style={{color: 'green'}}>Today is a Good day <span role=\"img\" aria-label=\"happy\">ðŸ˜Š</span></h2>\n            } else if (response.dayRanking === \"Bad\") {\n              rank = <h2 style={{color: 'red'}}>Today is a Bad day <span role=\"img\" aria-label=\"sad\">ðŸ˜ž</span></h2>\n            } else {\n              rank = <h2>Today is an OK day.</h2>\n            }\n            if (response.dayRanking !== \"Good\") {\n              let tempResp = response.dayRanking;\n              let tomorrow = new Date();\n              let tommdate = \"\";\n              let i = 0\n              do {\n                tomorrow.setDate(tomorrow.getDate() + i);\n                tommdate = tomorrow.toLocaleDateString('en-GB');\n                await fetch(`https://${API_HOST}/api/getTimes?citycode=${citycode}&date=${tommdate}`)\n                // eslint-disable-next-line\n                .then(async (response) => {\n                  response = await response.json();\n                  tempResp = response.dayRanking\n                })\n                i += 1\n              } while (tempResp !== \"Good\")\n              const humanDate = new Date(tommdate).toDateString();\n              const nextGoodDayElem = <h4><i>Next good day is: {humanDate}.</i></h4>\n              this.setState({NextGoodDay: nextGoodDayElem})\n            }\n            this.setState({Times: group, DayRank: rank, Header: header, CityString: <i>{cityString}</i>})\n        })\n      }).catch(() => {\n        if (this.state.city !== '') {\n          this.setState({Times: [], DayRank: <h2 style={{color: 'red'}}>City not found</h2>, Header: [], CityString: []})\n        } else {\n          this.setState({Times: [], DayRank: <h2>Please enter a city</h2>, Header: [], CityString: []})\n        }\n      })\n    }\n    doTheThing = async (d) => {\n      await this.createGroup(d); this.setState({loading: false});\n    }\n    onFieldChange = async (meme) => {\n      await this.setState({loading: true, city: meme});\n      await clearTimeout(this.typingTimeout);\n      this.typingTimeout = setTimeout(() => {this.doTheThing(meme)}, 550);\n    }\n    render() {\n      return (\n      <Container>\n          <InputGroup className=\"mb-3\">\n            <InputGroup.Prepend>\n              <InputGroup.Text id=\"basic-addon3\">\n                City\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <FormControl onChange={(event) => {console.log(event.target.value); this.onFieldChange(event.target.value)}} id=\"geocoderid\" value={this.state.city} aria-describedby=\"basic-addon3\" />\n          </InputGroup>\n          <i>Or choose from some common cities</i>\n          <br />\n          <ToggleButtonGroup type=\"radio\" name=\"options\">\n            <ToggleButton value={1} onClick={() => {this.setState({city: \"Chicago\"}); this.doTheThing(\"Chicago\");}}>Chicago</ToggleButton>\n            <ToggleButton value={2} onClick={() => {this.setState({city: \"San Diego\"}); this.doTheThing(\"San Diego\");}}>San Diego</ToggleButton>\n            <ToggleButton value={5} onClick={() => {this.setState({city: \"New York City\"}); this.doTheThing(\"New York City\");}}>New York City</ToggleButton>\n            <ToggleButton value={3} onClick={() => {this.setState({city: \"London\"}); this.doTheThing(\"City of London\");}}>London</ToggleButton>\n            <ToggleButton value={4} onClick={() => {this.setState({city: \"New Dehli\"}); this.doTheThing(\"New Dehli, India\");}}>New Dehli</ToggleButton>\n\n          </ToggleButtonGroup>\n          <br />\n          <br />\n        <div aria-label=\"Times list\" key={'opts'}>\n          {this.state.loading ? <Spinner animation=\"border\" /> : \n          <div>\n              {this.state.DayRank} \n              {this.state.NextGoodDay} \n              {this.state.CityString}           \n              <br /><Table striped bordered hover>\n              {this.state.Header}\n              <tbody>\n                {this.state.Times}\n              </tbody>\n            </Table>\n          </div>\n          }\n          {this.state.loading ? <span></span> : <hr />}\n        </div>\n      </Container>\n      );\n    }\n}","import React from 'react';\nimport SundaraNavbar from './Navbar';\nimport SundaraJumboIntro from './JumboIntro';\nimport { DataRenderer } from './DataRenderer';\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n      <SundaraNavbar />\n      <SundaraJumboIntro />\n      <DataRenderer />\n    </div>\n  )\n}\n\nexport default Home;\n","import React from 'react';\nimport SundaraNavbar from './Navbar';\nimport SundaraJumboIntro from './JumboIntro';\n\nfunction Pricing() {\n  return (\n    <div className=\"Home\">\n      <SundaraNavbar />\n      <SundaraJumboIntro />\n    </div>\n  )\n}\n\nexport default Pricing;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Home from './Home';\r\nimport Pricing from './Pricing';\r\nimport {\r\n\tHashRouter,\r\n\tRoute\r\n} from \"react-router-dom\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\t<HashRouter>\r\n\t\t<div>\r\n\t\t  <Route path=\"/\" exact component={ Home }/>\t\r\n\t\t  <Route path=\"/pricing\" exact component={ Pricing }/>\r\n\r\n    </div>\r\n  </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}